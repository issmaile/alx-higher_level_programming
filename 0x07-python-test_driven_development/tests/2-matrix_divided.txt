#!/usr/bin/python3
"""
Module to test the matrix_divided func
"""

def matrix_divided(matrix, div):
    """
    Tests matrix_divided

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    >>> matrix = [[1.1, 2.2], [3.3, 4.4]]
    >>> matrix_divided(matrix, 1.1)
    [[1.0, 2.0], [3.0, 4.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix = [[1, 2], [3, 4], [5, 6], [7, 8]]
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
    TypeError: div must be a number (integer or float)

    >>> matrix = [[1, 2], [3, 4, 5], [6, 7, 8]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = "Not a matrix"
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2], [3, 4], [5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number (integer or float)

    """

if __name__ == "__main__":
    import doctest
    doctest.testmod()
